/cases:
  get:
    tags:
      - Cases
    summary: List cases
    operationId: listCases
    security:
      - bearerAuth: []
    parameters:
      - name: status[]
        description: case statuses used to filter the list
        in: query
        required: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CaseStatusDto'
      - name: inbox_id[]
        description: inbox IDs used to filter the list
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
            format: uuid
      - $ref: 'components.yml#/parameters/start_date'
      - $ref: 'components.yml#/parameters/end_date'
      - name: sorting
        description: the field used to sort the items
        in: query
        required: false
        schema:
          type: string
          enum:
            - created_at
      - name: name
        description: the field used to sort the items
        in: query
        required: false
        schema:
          type: string
      - $ref: 'components.yml#/parameters/offset_id'
      - $ref: 'components.yml#/parameters/limit'
      - $ref: 'components.yml#/parameters/order'
      - name: include_snoozed
        description: Include cases that are currently snoozed
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: exclude_assigned
        description: Exclude cases that are assigned
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: assignee_id
        description: Include cases that are assigned to a specific user
        in: query
        required: false
        schema:
          type: string
    responses:
      '200':
        description: List of corresponding cases
        content:
          application/json:
            schema:
              allOf:
                - $ref: 'components.yml#/schemas/Pagination'
                - type: object
                  required:
                    - items
                  properties:
                    items:
                      type: array
                      items:
                        $ref: '#/components/schemas/CaseDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
  post:
    tags:
      - Cases
    summary: Create a case
    operationId: createCase
    security:
      - bearerAuth: []
    requestBody:
      description: 'Payload object used to create a case'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCaseBodyDto'
      required: true
    responses:
      '200':
        description: The case corresponding to the provided payload
        content:
          application/json:
            schema:
              type: object
              required:
                - case
              properties:
                case:
                  $ref: '#/components/schemas/CaseDetailDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
/cases/{caseId}:
  get:
    tags:
      - Cases
    summary: Get a case by id
    operationId: getCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be fetched
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: The case corresponding to the provided `caseId`
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseDetailDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
  patch:
    tags:
      - Cases
    summary: Update a case
    operationId: updateCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be updated
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      description: 'Updated case object'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCaseBodyDto'
      required: true
    responses:
      '200':
        description: The updated case corresponding to the provided `caseId`
        content:
          application/json:
            schema:
              type: object
              required:
                - case
              properties:
                case:
                  $ref: '#/components/schemas/CaseDetailDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/{caseId}/next:
  get:
    tags:
      - Cases
    summary: Get the next unassigned case
    operationId: getNextCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be fetched
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: The case corresponding to the provided `caseId`
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NextCaseIdDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/{caseId}/escalate:
  post:
    tags:
      - Cases
    summary: Escalate a case
    operationId: escalateCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be escalated
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: The case was successfully escalated
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/{caseId}/assignee:
  post:
    tags:
      - Cases
    summary: Assign a user to a case
    operationId: assignUser
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be assigned to
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      description: Assignment specification
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssignCaseBodyDto'
      required: true
    responses:
      '204':
        description: Case was successfully assigned to
      '400':
        $ref: 'components.yml#/responses/400'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
  delete:
    tags:
      - Cases
    summary: Unassign a user from a case
    operationId: unassignUser
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be unassigned
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: Case was successfully unassigned
      '400':
        $ref: 'components.yml#/responses/400'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/{caseId}/decisions:
  get:
    tags:
      - Cases
    summary: List a case decisions
    operationId: getPaginatedCaseDecisions
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case to retrieve decisions from
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: cursor_id
        description: The cursor from which to return a page of decisions
        in: query
        schema:
          type: string
      - name: limit
        description: How many decisions to return per page
        in: query
        schema:
          type: integer
          default: 50
    responses:
      '200':
        description: The paginated list of decisions in the case
        content:
          application/json:
            schema:
              type: object
              required: [decisions, pagination]
              properties:
                decisions:
                  type: array
                  items:
                    $ref: '#/components/schemas/CaseDecisionDto'
                pagination:
                  type: object
                  required: [has_more cursor_id]
                  properties:
                    has_more:
                      type: boolean
                    cursor_id:
                      type: string
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
  post:
    tags:
      - Cases
    summary: Add decisions to a case
    operationId: addDecisionsToCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be updated
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      description: 'Decision ids to add to case'
      content:
        application/json:
          schema:
            type: object
            required:
              - decision_ids
            properties:
              decision_ids:
                type: array
                description: List of decision IDs to add to the case
                items:
                  type: string
                  format: uuid
      required: true
    responses:
      '200':
        description: The updated case corresponding to the provided `caseId`
        content:
          application/json:
            schema:
              type: object
              required:
                - case
              properties:
                case:
                  $ref: '#/components/schemas/CaseDetailDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/{caseId}/snooze:
  post:
    tags:
      - Cases
    summary: Snooze a case
    operationId: snoozeCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be snoozed
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      description: 'Decision ids to add to case'
      content:
        application/json:
          schema:
            type: object
            required:
              - until
            properties:
              until:
                type: string
                format: date-time
      required: true
    responses:
      '204':
        description: The case was snoozed
      '400':
        $ref: 'components.yml#/responses/400'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
  delete:
    tags:
      - Cases
    summary: Snooze a case
    operationId: unsnoozeCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be unsnoozed
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: The case was unsnoozed
      '400':
        $ref: 'components.yml#/responses/400'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/{caseId}/comments:
  post:
    tags:
      - Cases
    summary: Add a comment to a case
    operationId: addCommentToCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be updated
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      description: 'Comment to add to the case'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - comment
            properties:
              comment:
                type: string
    responses:
      '200':
        description: The updated case corresponding to the provided `caseId`
        content:
          application/json:
            schema:
              type: object
              required:
                - case
              properties:
                case:
                  $ref: '#/components/schemas/CaseDetailDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/{caseId}/case_tags:
  post:
    tags:
      - Cases
    summary: Define tags for a case
    operationId: updateTagsForCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be updated
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - tag_ids
            properties:
              tag_ids:
                type: array
                description: List of all tag IDs for the case
                items:
                  type: string
                  format: uuid
    responses:
      '200':
        description: The updated case corresponding to the provided `caseId`
        content:
          application/json:
            schema:
              type: object
              required:
                - case
              properties:
                case:
                  $ref: '#/components/schemas/CaseDetailDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/{caseId}/pivot_objects:
  get:
    tags:
      - Cases
    summary: Get case pivot objects
    description: |
      Return the pivot objects present in a case, computed from the pivot values on decisions
      in the case. Pivot objects are deduplicated and come with their actual content (if previously
      ingested) if the pivot value is from an actual unique pivot "object" (not just a value on an entity).
    operationId: getPivotObjectsForCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case to read from
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Detailed values (depending on ingestion status) on
        content:
          application/json:
            schema:
              type: object
              properties:
                pivot_objects:
                  type: array
                  items:
                    $ref: '#/components/schemas/PivotObjectDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/files/{caseFileId}/download_link:
  get:
    tags:
      - Cases
    summary: Download a case file
    operationId: downloadCaseFile
    security:
      - bearerAuth: []
    parameters:
      - name: caseFileId
        description: ID of the case file that needs to be downloaded
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Signed url to download the case file's content
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  format: uri
                  description: Signed url to download the case file's content
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
/cases/review_decision:
  post:
    tags:
      - Tags
    summary: Review a decision
    operationId: reviewDecision
    security:
      - bearerAuth: []
    requestBody:
      description: Tag object that needs to be added to the database
      content:
        application/json:
          schema:
            type: object
            properties:
              decision_id:
                type: string
                format: uuid
              review_comment:
                type: string
              review_status:
                $ref: '#/components/schemas/ReviewStatusDto'
            required:
              - decision_id
              - review_comment
              - review_status
      required: true
    responses:
      '200':
        description: The updated case with the reviewed decision
        content:
          application/json:
            schema:
              type: object
              required:
                - case
              properties:
                case:
                  $ref: '#/components/schemas/CaseDetailDto'
      '400':
        $ref: 'components.yml#/responses/400'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
/cases/related/pivot/{pivotValue}:
  get:
    tags:
      - Cases
    summary: Get cases related to a pivot from a pivot value
    operationId: getPivotRelatedCases
    security:
      - bearerAuth: []
    parameters:
      - name: pivotValue
        description: Pivot value
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: The list of the cases related to the pivot
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CaseDto'
/cases/{caseId}/review/enqueue:
  post:
    tags:
      - Cases
    summary: Enqueue a review for a case powered by AI
    operationId: enqueueReviewForCase
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case that needs to be reviewed
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: The review was enqueued
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'

/cases/{caseId}/review:
  get:
    tags:
      - Cases
    summary: Get the most recent AI generated review (if present) for a case
    operationId: getMostRecentCaseReview
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case on which to get the most recent review
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: The most recent review output for a case
        content:
          application/json:
            schema:
              type: array
              minItems: 0
              maxItems: 1
              items:
                $ref: '#/components/schemas/CaseReviewDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/{caseId}/review/{reviewId}/feedback:
  put:
    tags:
      - Cases
    summary: Add or update feedback for a case review
    operationId: addOrUpdateCaseReviewFeedback
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case on which to add or update feedback
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: reviewId
        description: ID of the review on which to add or update feedback
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      description: Feedback to add or update for a case review
      content:
        application/json:
          schema:
            type: object
            required:
              - reaction
            properties:
              reaction:
                $ref: '#/components/schemas/CaseReviewFeedbackDto'
    responses:
      '200':
        description: The updated case review
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/CaseReviewDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'
      '404':
        $ref: 'components.yml#/responses/404'
/cases/{caseId}/data_for_investigation:
  get:
    tags:
      - Cases
    summary: Download a case data for investigation
    operationId: downloadCaseData
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: The data of the case
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      '401':
        $ref: 'components.yml#/responses/401'
/cases/{caseId}/enrich_kyc:
  post:
    tags:
      - Cases
    summary: Enrich the pivot object of the case with KYC data (if present)
    operationId: enrichPivotObjectOfCaseWithKyc
    security:
      - bearerAuth: []
    parameters:
      - name: caseId
        description: ID of the case
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Analysis of the pivot object of the case with KYC data
        content:
          application/json:
            schema:
              type: object
              properties:
                results:
                  type: array
                  items: 
                    $ref: '#/components/schemas/KYCAnalysisDto'
      '401':
        $ref: 'components.yml#/responses/401'
      '403':
        $ref: 'components.yml#/responses/403'

components:
  schemas:
    ReviewStatusDto:
      type: string
      enum: ['pending', 'approve', 'decline']
    CaseStatusDto:
      type: string
      enum: ['pending', 'investigating', 'closed', 'waiting_for_action', 'snoozed']
    CaseStatusForCaseEventDto:
      # Old statuses (open, discarded and resolved) are kept for backward compatibility with existing case events.
      enum: ['pending', 'investigating', 'closed', 'open', 'discarded', 'resolved']
    CaseOutcomeDto:
      type: string
      enum: ['false_positive', 'valuable_alert', 'confirmed_risk', 'unset']
    CaseDto:
      type: object
      required:
        - id
        - created_at
        - decisions_count
        - name
        - status
        - outcome
        - inbox_id
        - contributors
        - tags
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        decisions_count:
          type: number
        name:
          type: string
        status:
          $ref: '#/components/schemas/CaseStatusDto'
        outcome:
          $ref: '#/components/schemas/CaseOutcomeDto'
        inbox_id:
          type: string
          format: uuid
        contributors:
          type: array
          items:
            $ref: '#/components/schemas/CaseContributorDto'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/CaseTagDto'
        snoozed_until:
          type: string
          format: date-time
        assigned_to:
          type: string
          format: uuid
    CaseDetailDto:
      allOf:
        - $ref: '#/components/schemas/CaseDto'
        - type: object
          required:
            - decisions
            - events
            - files
          properties:
            decisions:
              type: array
              items:
                $ref: '#/components/schemas/CaseDecisionDto'
            events:
              type: array
              items:
                $ref: '#/components/schemas/CaseEventDto'
            files:
              type: array
              items:
                $ref: '#/components/schemas/CaseFileDto'
    CaseDecisionDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        trigger_object:
          additionalProperties: true
        trigger_object_type:
          type: string
        outcome:
          $ref: 'decisions.yml#/components/schemas/OutcomeDto'
        pivot_values:
          type: array
          items:
            $ref: 'components.yml#/schemas/PivotValueDto'
        review_status:
          $ref: '#/components/schemas/ReviewStatusDto'
        scenario:
          type: object
          required:
            - id
            - name
            - scenario_iteration_id
            - version
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            scenario_iteration_id:
              type: string
              format: uuid
            version:
              type: integer
        score:
          type: integer
        error:
          $ref: 'components.yml#/schemas/Error'
      required:
        - id
        - created_at
        - trigger_object
        - trigger_object_type
        - outcome
        - pivot_values
        - scenario
        - score
    NextCaseIdDto:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
    CaseFileDto:
      type: object
      required:
        - id
        - case_id
        - created_at
        - file_name
      properties:
        id:
          type: string
          format: uuid
        case_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        file_name:
          type: string
    CaseTagDto:
      type: object
      required:
        - id
        - case_id
        - tag_id
        - created_at
      properties:
        id:
          type: string
          format: uuid
        case_id:
          type: string
          format: uuid
        tag_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
    CaseContributorDto:
      type: object
      required:
        - id
        - case_id
        - user_id
        - created_at
      properties:
        id:
          type: string
          format: uuid
        case_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
    UpdateCaseBodyDto:
      type: object
      properties:
        name:
          type: string
        inbox_id:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/CaseStatusDto'
        outcome:
          $ref: '#/components/schemas/CaseOutcomeDto'
    AssignCaseBodyDto:
      type: object
      required: ['user_id']
      properties:
        user_id:
          type: string
          format: uuid
    CreateCaseBodyDto:
      type: object
      required:
        - name
        - inbox_id
      properties:
        name:
          type: string
        inbox_id:
          type: string
          format: uuid
        decision_ids:
          type: array
          items:
            type: string
            format: uuid
    CaseEventDto:
      type: object
      discriminator:
        propertyName: event_type
        mapping:
          case_created: '#/components/schemas/CaseCreatedEventDto'
          status_updated: '#/components/schemas/CaseStatusUpdatedEventDto'
          outcome_updated: '#/components/schemas/CaseOutcomeUpdatedEventDto'
          decision_added: '#/components/schemas/DecisionAddedEventDto'
          comment_added: '#/components/schemas/CommentAddedEventDto'
          name_updated: '#/components/schemas/NameUpdatedEventDto'
          tags_updated: '#/components/schemas/CaseTagsUpdatedEventDto'
          file_added: '#/components/schemas/FileAddedEventDto'
          inbox_changed: '#/components/schemas/InboxChangedEventDto'
          rule_snooze_created: '#/components/schemas/RuleSnoozeCreatedDto'
          decision_reviewed: '#/components/schemas/DecisionReviewedEventDto'
          case_snoozed: '#/components/schemas/CaseSnoozedDto'
          case_unsnoozed: '#/components/schemas/CaseUnsnoozedDto'
          case_assigned: '#/components/schemas/CaseAssignedEventDto'
          sar_created: '#/components/schemas/SarCreatedEventDto'
          sar_deleted: '#/components/schemas/SarDeletedEventDto'
          sar_status_changed: '#/components/schemas/SarStatusChangedEventDto'
          sar_file_uploaded: '#/components/schemas/SarFileUploadedEventDto'
          entity_annotated: '#/components/schemas/EntityAnnotatedEventDto'
      required:
        - id
        - case_id
        - created_at
        - event_type
      properties:
        id:
          type: string
          format: uuid
        case_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        event_type:
          type: string
    CaseCreatedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          properties:
            user_id:
              type: string
              format: uuid
    CaseStatusUpdatedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - new_value
            - user_id
          properties:
            new_value:
              $ref: '#/components/schemas/CaseStatusForCaseEventDto'
            user_id:
              type: string
              format: uuid
    CaseOutcomeUpdatedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - new_value
            - user_id
          properties:
            new_value:
              $ref: '#/components/schemas/CaseOutcomeDto'
            user_id:
              type: string
              format: uuid
    CaseTagsUpdatedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - new_value
            - user_id
          properties:
            new_value:
              type: string
              description: comma separated list of tag ids
            user_id:
              type: string
              format: uuid
    DecisionAddedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          properties:
            user_id:
              type: string
              format: uuid
    CommentAddedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - additional_note
            - user_id
          properties:
            additional_note:
              type: string
            user_id:
              type: string
              format: uuid
    NameUpdatedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - new_value
            - user_id
          properties:
            new_value:
              type: string
            user_id:
              type: string
              format: uuid
    FileAddedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - additional_note
            - user_id
          properties:
            additional_note:
              type: string
            user_id:
              type: string
              format: uuid
    InboxChangedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - new_value
            - user_id
          properties:
            new_value:
              type: string
              format: uuid
            user_id:
              type: string
              format: uuid
    CaseAssignedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - new_value
          properties:
            new_value:
              description: ID of the user the case was assigned to
              type: string
              format: uuid
            user_id:
              type: string
              format: uuid
    SarCreatedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - resource_type
            - resource_id
          properties:
            user_id:
              type: string
              format: uuid
            resource_type:
              description: Resource being created, should be `sar`
              type: string
            resource_id:
              description: ID of the suspicious activity report being created
              type: string
              format: uuid
    SarDeletedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - resource_type
            - resource_id
          properties:
            user_id:
              type: string
              format: uuid
            resource_type:
              description: Resource being deleted, should be `sar`
              type: string
            resource_id:
              description: ID of the suspicious activity report being deleted
              type: string
              format: uuid
    SarStatusChangedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - resource_type
            - resource_id
            - new_value
          properties:
            new_value:
              description: New status for the suspicious activity report
              type: string
            user_id:
              type: string
              format: uuid
            resource_type:
              description: Resource being modified, should be `sar`
              type: string
            resource_id:
              description: ID of the suspicious activity report being modified
              type: string
              format: uuid
    SarFileUploadedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - resource_type
            - resource_id
            - new_value
          properties:
            new_value:
              description: Name of the file that was uploaded
              type: string
            user_id:
              type: string
              format: uuid
            resource_type:
              description: Resource being modified, should be `sar`
              type: string
            resource_id:
              description: ID of the suspicious activity report the file was uploaded to
              type: string
              format: uuid
    EntityAnnotatedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - resource_type
            - resource_id
            - new_value
            - additional_note
          properties:
            new_value:
              description: Name of the file that was uploaded
              type: string
            user_id:
              type: string
              format: uuid
            resource_type:
              description: Resource being modified, should be `annotation`
              type: string
            resource_id:
              description: ID of the annotation
              type: string
              format: uuid
            additional_note:
              description: The type of annotation
              type: string
    RuleSnoozeCreatedDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - additional_note
            - resource_type
            - resource_id
            - user_id
          properties:
            additional_note:
              type: string
            resource_id:
              type: string
              format: uuid
            resource_type:
              type: string
            user_id:
              type: string
              format: uuid
    DecisionReviewedEventDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - additional_note
            - new_value
            - previous_value
            - resource_id
            - resource_type
            - user_id
          properties:
            additional_note:
              type: string
              description: The note added by the user to justify the review
            new_value:
              type: string
              format: uuid
              description: The new review_status of the decision
              enum: ['approve', 'decline']
            previous_value:
              type: string
              format: uuid
              description: The previous review_status of the decision
            resource_id:
              type: string
              format: uuid
              description: The id of the decision being reviewed
            resource_type:
              type: string
              enum: ['decision']
            user_id:
              type: string
              format: uuid
    CaseSnoozedDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - new_value
            - user_id
          properties:
            user_id:
              type: string
              format: uuid
            new_value:
              type: string
              format: date-time
            previous_value:
              type: string
              format: date-time
    CaseUnsnoozedDto:
      allOf:
        - $ref: '#/components/schemas/CaseEventDto'
        - type: object
          required:
            - user_id
            - new_value
          properties:
            user_id:
              type: string
              format: uuid
            new_value:
              type: string
              format: date-time
            previous_value:
              type: string
              format: date-time
    PivotObjectDto:
      type: object
      properties:
        pivot_object_id:
          type: string
          description:
            The "object_id" field of the pivot object. Can be null if the pivot type is "field" or if the pivot
            does point to another unique field than "object_id", and the object has not been ingested yet.
        pivot_value:
          type: string
          description: The actual pivot value, as on the decision. This value is used for grouping decisions.
        pivot_id:
          type: string
          format: uuid
        pivot_type:
          type: string
          enum: ['field', 'object']
        pivot_object_name:
          type: string
          description: Name of the entity on which the pivot value is found.
        pivot_field_name:
          type: string
          description: Name of the field used as a pivot value
        is_ingested:
          type: boolean
          description: Whether the pivot object has been ingested or not (only for pivot type "object")
        pivot_object_data:
          $ref: 'ingestion.yml#/components/schemas/ClientObjectDetailDto'
        number_of_decisions:
          type: integer
          description: Number of decisions that have this pivot value
      required:
        - pivot_value
        - pivot_type
        - is_ingested
        - pivot_object_name
        - pivot_field_name
        - pivot_object_data
        - number_of_decisions
    CaseReviewDto:
      type: object
      required:
        - id
        - reaction
        - version
        - review
      properties:
        id:
          type: string
          format: uuid
        reaction:
          $ref: '#/components/schemas/CaseReviewFeedbackDto'
        version:
          type: string
        review:
          $ref: '#/components/schemas/CaseReviewContentDto'
    CaseReviewContentDto:
      allOf:
        - type: object
          required:
            - output
            - proofs
            - version
          properties:
            version:
              type: string
            output:
              type: string
            proofs:
              type: array
              items:
                $ref: '#/components/schemas/CaseReviewProofDto'
            thought:
              type: string
            pivot_enrichments:
              type: object
              description: The enrichments of the pivot objects (null if the feature is disabled)
              nullable: true
              properties:
                results:
                  type: array
                  items: 
                    $ref: '#/components/schemas/KYCAnalysisDto'
        - anyOf:
          - $ref: '#/components/schemas/CaseReviewOkDto'
          - $ref: '#/components/schemas/CaseReviewNotOkDto'
    CaseReviewProofDto:
      type: object
      required:
        - id
        - type
        - origin
        - reason
      properties:
        id:
          type: string
          description: The id of the object (could be the object_id if organization data model object)
        type:
          type: string
          description: The type of the object (case, decision, account, transaction, etc.)
        origin:
          type: string
          description: The origin of the object (organization data model object or internal object)
          enum: ['data_model', 'internal']
        reason:
          type: string
          description: The reason why the object was used to justify the review
    CaseReviewOkDto:
      type: object
      required:
        - ok
      properties:
        ok:
          type: boolean
          enum: [true]

    CaseReviewNotOkDto:
      type: object
      required:
        - ok
        - sanity_check
      properties:
        ok:
          type: boolean
          enum: [false]
        sanity_check:
          type: string
    
    CaseReviewFeedbackDto:
      type: string
      enum: ['ok', 'ko']
      description: The reaction to the review, can be null if not set or removed
      nullable: true

    GroundingCitationDto:
      type: object
      required:
        - title
        - domain
        - url
        - date
      properties:
        title:
          type: string
          description: Title of the source
        domain:
          type: string
          description: Domain of the source (not used for now)
        url:
          type: string
          description: URL of the source
        date:
          type: string
          format: date-time
          description: Date of the source
    KYCAnalysisDto:
      type: object
      required:
        - analysis
        - entity_name
        - citations
      properties:
        analysis:
          type: string
          description: Output of LLM analysis on a pivot object
        entity_name:
          type: string
          description: Name of the entity on which the pivot value is found.
        citations:
          type: array
          description: List of source used in the analysis. The analysis uses anchors ([1][2]), these anchors are used to justify the analysis and the index follow the list order
          items:
            $ref: '#/components/schemas/GroundingCitationDto'