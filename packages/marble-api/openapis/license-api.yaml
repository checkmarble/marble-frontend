openapi: 3.0.3
info:
  version: 1.0.0
  title: 'License API'
  description: 'API for managing licenses'
servers:
  - url: 'http://localhost:8080'
    description: Local devlopment server
paths:
  /is-sso-available:
    get:
      summary: Check if SSO is enabled
      description: Returns true if SSO is enabled
      operationId: isSsoEnabled
      responses:
        '200':
          description: SSO is enabled
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_sso_enabled:
                    type: boolean
                required:
                  - is_sso_enabled
  /organizations/{organizationId}/feature_access:
    get:
      summary: Get the entitlements of an organization
      description: Returns the entitlements of an organization
      operationId: getEntitlements
      security:
        - bearerAuth: []
      parameters:
        - name: organizationId
          description: ID of the organization
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: License validation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  feature_access:
                    $ref: '#/components/schemas/LicenseEntitlementsDto'
                required:
                  - feature_access
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
components:
  schemas:
    FeatureAccessDto:
      type: string
      enum: ['allowed', 'restricted', 'test', 'missing_configuration']
    LicenseEntitlementsDto:
      type: object
      properties:
        workflows:
          $ref: '#/components/schemas/FeatureAccessDto'
        analytics:
          $ref: '#/components/schemas/FeatureAccessDto'
        roles:
          $ref: '#/components/schemas/FeatureAccessDto'
        webhooks:
          $ref: '#/components/schemas/FeatureAccessDto'
        rule_snoozes:
          $ref: '#/components/schemas/FeatureAccessDto'
        test_run:
          $ref: '#/components/schemas/FeatureAccessDto'
        sanctions:
          $ref: '#/components/schemas/FeatureAccessDto'
      required:
        - workflows
        - analytics
        - roles
        - webhooks
        - rule_snoozes
        - test_run
        - sanctions
  responses:
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            type: string
            example: Unauthorized
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            type: string
            example: Forbidden
