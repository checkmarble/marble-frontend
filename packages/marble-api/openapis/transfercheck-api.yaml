openapi: 3.0.3
info:
  version: 1.0.0
  title: 'Transfercheck API'
  description: 'Consume Transfercheck endpoints'
tags:
  - name: Partners
    description: Operations about partners.
  - name: Transfers
    description: Operations about transfers.
servers:
  - url: 'http://localhost:8080'
    description: Local devlopment server
paths:
  /partners/{partnerId}:
    get:
      tags:
        - Partners
      summary: Get a partner
      description: Get a partner by database ID
      operationId: getPartner
      security:
        - bearerAuth: []
      parameters:
        - name: partnerId
          description: ID of the partner in the database
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Partner corresponding to the provided `partnerId`
          content:
            application/json:
              schema:
                type: object
                properties:
                  partner:
                    $ref: '#/components/schemas/PartnerDto'
                required:
                  - partner
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /token:
    post:
      tags:
        - Authorization
      summary: Get an access token
      description: You need to suply either "X-API-Key" or “Authorization" header
      operationId: postToken
      security: []
      parameters:
        - in: header
          description: 'Valid Api Key token to generate a new access token'
          name: X-API-Key
          schema:
            type: string
        - in: header
          description: 'Valid bearer token to generate a new access token'
          name: Authorization
          schema:
            type: string
      responses:
        '200':
          description: New access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          $ref: '#/components/responses/401'
  /credentials:
    get:
      tags:
        - Authorization
      summary: Get user credentials included in the token
      description: You need to suply either "X-API-Key" or “Authorization" header
      operationId: getCredentials
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Credentials included in the token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsDto'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /transfers:
    get:
      tags:
        - Transfers
      summary: List transfers
      description: List transfers corresponding to filters
      operationId: listTransfers
      security:
        - bearerAuth: []
      parameters:
        - name: transfer_id
          description: ID of the transfer in the Partner database (do not confuse with the ID generated by Marble database)
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transfers corresponding to filters
          content:
            application/json:
              schema:
                type: object
                properties:
                  transfers:
                    type: array
                    items:
                      $ref: '#/components/schemas/TransferDto'
                required:
                  - transfers
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /transfers/{transferId}:
    get:
      tags:
        - Transfers
      summary: Get a transfer by id
      description: Get a transfer by Marble database ID (not the Partner database ID)
      operationId: getTransfer
      security:
        - bearerAuth: []
      parameters:
        - name: transferId
          description: ID of the transfer in the Marble database (not the Partner database)
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transfer corresponding to the provided `transferId`
          content:
            application/json:
              schema:
                type: object
                properties:
                  transfer:
                    $ref: '#/components/schemas/TransferDto'
                required:
                  - transfer
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    patch:
      tags:
        - Transfers
      summary: Update a transfer
      description: Update a transfer by Marble database ID (not the Partner database ID)
      operationId: updateTransfer
      security:
        - bearerAuth: []
      parameters:
        - name: transferId
          description: ID of the transfer in the Marble database (not the Partner database)
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Describe the modifications to make to the transfer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferUpdateBodyDto'
        required: true
      responses:
        '200':
          description: Transfer corresponding to the provided `transferId`
          content:
            application/json:
              schema:
                type: object
                properties:
                  transfer:
                    $ref: '#/components/schemas/TransferDto'
                required:
                  - transfer
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
components:
  schemas:
    Token:
      type: object
      required:
        - access_token
        - token_type
        - expires_at
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_at:
          type: string
          format: date-time
    CredentialsDto:
      type: object
      required:
        - credentials
      properties:
        credentials:
          type: object
          required:
            - organization_id
            - role
            - actor_identity
            - permissions
          properties:
            organization_id:
              type: string
            partner_id:
              type: string
            role:
              type: string
            actor_identity:
              type: object
              properties:
                user_id:
                  type: string
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                api_key_name:
                  type: string
            permissions:
              type: array
              items:
                type: string
    PartnerDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        name:
          type: string
      required:
        - id
        - created_at
        - name
    TransferUpdateBodyDto:
      type: object
      properties:
        status:
          type: string
          enum: [neutral, suspected_fraud, confirmed_fraud]
      required:
        - status
    TransferDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        last_scored_at:
          type: string
          format: date-time
          nullable: true
        score:
          type: number
          nullable: true
        transfer_data:
          $ref: '#/components/schemas/TransferDataDto'
      required:
        - id
        - transfer_data
    TransferDataDto:
      type: object
      properties:
        beneficiary_bic:
          type: string
        beneficiary_iban:
          type: string
        beneficiary_name:
          type: string
        created_at:
          type: string
          format: date-time
        currency:
          type: string
        label:
          type: string
        sender_account_id:
          type: string
        sender_bic:
          type: string
        sender_device:
          type: string
        sender_ip:
          type: string
        status:
          type: string
          enum: [neutral, suspected_fraud, confirmed_fraud]
        timezone:
          type: string
        transfer_id:
          type: string
        transfer_requested_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        value:
          type: number
      required:
        - beneficiary_bic
        - beneficiary_iban
        - beneficiary_name
        - created_at
        - currency
        - label
        - sender_account_id
        - sender_bic
        - sender_device
        - sender_ip
        - status
        - timezone
        - transfer_id
        - transfer_requested_at
        - updated_at
        - value
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            type: string
            example: Unauthorized
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            type: string
            example: Forbidden
    '404':
      description: Not found
      content:
        application/json:
          schema:
            type: string
            example: Not found
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            type: string
            example: Duplicate Value
    '422':
      description: Unprocessable Content
      content:
        application/json:
          schema:
            type: object
            description: To be defined
