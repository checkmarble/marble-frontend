import { type MarbleApi } from '@app-builder/infra/marble-api';
import { adaptTransfer, type Transfer } from '@app-builder/models/transfer';

export interface TransferRepository {
  listTransfers(args: {
    /**
     * ID of the transfer in the Partner database (do not confuse with the ID generated by Marble database)
     */
    partnerTransferId: string;
  }): Promise<Transfer[]>;
  getTransfer(args: {
    /**
     * ID of the transfer in the Marble database (not the Partner database)
     */
    marbleTransferId: string;
  }): Promise<Transfer>;
}

export function getTransferRepository() {
  return (marbleApiClient: MarbleApi): TransferRepository => ({
    listTransfers: async ({ partnerTransferId }) => {
      const { transfers } =
        await marbleApiClient.listTransfers(partnerTransferId);

      return transfers.map(adaptTransfer);
    },
    getTransfer: async ({ marbleTransferId }) => {
      const { transfer } = await marbleApiClient.getTransfer(marbleTransferId);

      return adaptTransfer(transfer);
    },
  });
}
