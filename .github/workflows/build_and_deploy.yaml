name: Reusable build and deploy job

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: 'Github environment to use'
        required: true
    secrets:
      GCP_SA_KEY:
        required: true
        description: 'GCP Service Account Key'

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    environment: ${{ inputs.environment }}
    env:
      TAG: europe-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/marble/marble-frontend:latest
      SERVICE_ACCOUNT: marble-frontend-cloud-run@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          install_components: beta

      - name: Configure Docker
        run: |
          gcloud auth configure-docker europe-docker.pkg.dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          target: app-builder
          tags: ${{ env.TAG }}

      - name: Deploy server
        run: |
          gcloud run deploy marble-front \
            --quiet \
            --image="${{ env.TAG }}" \
            --region="europe-west1" \
            --allow-unauthenticated \
            --service-account=${{ env.SERVICE_ACCOUNT }} \
            --set-env-vars=ENV=${{ vars.ENV }},FIREBASE_API_KEY=${{ vars.FIREBASE_API_KEY }},FIREBASE_APP_ID=${{ vars.FIREBASE_APP_ID }},FIREBASE_AUTH_DOMAIN=${{ vars.FIREBASE_AUTH_DOMAIN }},FIREBASE_MESSAGING_SENDER_ID=${{ vars.FIREBASE_MESSAGING_SENDER_ID }},FIREBASE_PROJECT_ID=${{ vars.FIREBASE_PROJECT_ID }},FIREBASE_STORAGE_BUCKET=${{ vars.FIREBASE_STORAGE_BUCKET }},MARBLE_API_DOMAIN=${{ vars.MARBLE_API_DOMAIN }},NODE_ENV=${{ vars.NODE_ENV }},SESSION_MAX_AGE=${{ vars.SESSION_MAX_AGE }} \
            --set-secrets=SESSION_SECRET=COOKIE_SESSION_SECRET:latest \
            --port=8080 \
            --min-instances=1
